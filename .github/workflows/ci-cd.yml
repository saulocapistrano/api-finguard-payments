name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 🚀 Checkout do repositório
        uses: actions/checkout@v3

      - name: 🔧 Configurar JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven

      - name: 📦 Build do projeto
        run: mvn clean package -DskipTests

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: 🚀 Checkout do repositório
        uses: actions/checkout@v3

      - name: 🔧 Configurar JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven

      - name: 🛠 Iniciar PostgreSQL
        run: |
          docker run --name postgres -e POSTGRES_USER=saulo -e POSTGRES_PASSWORD=123456 -e POSTGRES_DB=payments_db -p 5432:5432 -d postgres
          echo "Aguardando PostgreSQL iniciar..."
          sleep 15  # Aguarda o banco estar pronto

      - name: 🛠 Iniciar Kafka
        run: |
          docker run --name kafka -p 9092:9092 -e KAFKA_ZOOKEEPER_CONNECT=localhost:2181 -e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092 -e KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092 -e KAFKA_BROKER_ID=1 -d confluentinc/cp-kafka:latest
          echo "Aguardando Kafka iniciar..."
          sleep 15  # Aguarda o Kafka estar pronto

      - name: 🔍 Verificar se os containers estão rodando
        run: docker ps -a

      - name: 🔬 Executar testes automatizados
        env:
          DATABASE_URL: jdbc:postgresql://localhost:5432/payments_db
          DATABASE_USERNAME: saulo
          DATABASE_PASSWORD: 123456
          KAFKA_BOOTSTRAP_SERVERS: localhost:9092
        run: mvn test -X  # Executa testes com logs detalhados

  sonar:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: 🚀 Checkout do repositório
        uses: actions/checkout@v3

      - name: 🔧 Configurar JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven

      - name: 📊 Analisar qualidade do código com SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn sonar:sonar -Dsonar.projectKey=api-finguard-payments -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    needs: sonar
    if: github.ref == 'refs/heads/main'

    steps:
      - name: 🚀 Checkout do repositório
        uses: actions/checkout@v3

      - name: 🔧 Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 🔑 Login no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 📦 Construir e publicar imagem Docker
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/api-finguard-payments:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/api-finguard-payments:latest
