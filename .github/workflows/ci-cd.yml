name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: 🚀 Checkout do repositório
        uses: actions/checkout@v3

      - name: 🔧 Configurar JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven

      - name: 🔬 Executar testes automatizados
        run: mvn test

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: 🚀 Checkout do repositório
        uses: actions/checkout@v3

      - name: 🔧 Configurar JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven

      - name: 📦 Build do projeto
        run: mvn clean package -DskipTests

  sonar:
    runs-on: ubuntu-latest
    needs: build  # Certifique-se de que o build ocorre antes da análise do Sonar
    steps:
      - name: 🚀 Checkout do repositório
        uses: actions/checkout@v3

      - name: 🔧 Configurar JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven

      - name: 📥 Cache do SonarQube
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: 📥 Cache do Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: 📊 Analisar qualidade do código com SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn verify sonar:sonar \
            -Dsonar.projectKey=saulocapistrano_api-finguard-payments \
            -Dsonar.organization=saulocapistrano \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    needs: sonar  # Certifique-se de que o sonar existe e está definido corretamente
    if: github.ref == 'refs/heads/main'
    steps:
      - name: 🚀 Checkout do repositório
        uses: actions/checkout@v3

      - name: 🔧 Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 🔑 Login no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 📦 Construir e publicar imagem Docker
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/api-finguard-payments:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/api-finguard-payments:latest
